import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.modrinth.minotaur' version '2.+'
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
}

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    implementation "io.prometheus:simpleclient:${project.prometheus_version}"
    implementation "io.prometheus:simpleclient_httpserver:${project.prometheus_version}"
    implementation "io.prometheus:simpleclient_hotspot:${project.prometheus_version}"

    compileOnly "me.lucko:spark-api:0.1-SNAPSHOT"
}

processResources {
    inputs.property 'version', project.version
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from(sourceSets.main.resources.srcDirs) {
        include 'fabric.mod.json'
        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'fabric.mod.json'
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from 'LICENSE'
}

shadowJar {
    archiveClassifier = 'shaded-dev'

    dependencies {
        include dependency("io.prometheus:simpleclient:${project.prometheus_version}")
        include dependency("io.prometheus:simpleclient_common:${project.prometheus_version}")
        include dependency("io.prometheus:simpleclient_httpserver:${project.prometheus_version}")
        include dependency("io.prometheus:simpleclient_hotspot:${project.prometheus_version}")
    }
}

tasks.register('remapShadowJar', RemapJarTask) {
    dependsOn shadowJar
    input = shadowJar.archiveFile
    archiveFileName = shadowJar.archiveFileName.get().replaceAll('-shaded-dev\\.jar\$', '.jar')
    addNestedDependencies = true
}

modrinth {
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'dbVXHSlv'
    versionNumber = project.mod_version
    versionType = 'release'
    uploadFile = remapShadowJar

    gameVersions.add(project.minecraft_version)
    loaders.add('fabric')

    dependencies {
        required.project 'fabric-api'
        optional.project 'spark'
    }
}

assemble.dependsOn(remapShadowJar)
